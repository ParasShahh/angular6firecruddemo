{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/user/user.ts","webpack:///./src/app/customers/create-customer/create-customer.component.css","webpack:///./src/app/customers/create-customer/create-customer.component.html","webpack:///./src/app/customers/create-customer/create-customer.component.ts","webpack:///./src/app/customers/customer-details/customer-details.component.css","webpack:///./src/app/customers/customer-details/customer-details.component.html","webpack:///./src/app/customers/customer-details/customer-details.component.ts","webpack:///./src/app/customers/customer.service.ts","webpack:///./src/app/customers/customer.ts","webpack:///./src/app/customers/customers-list/customers-list.component.css","webpack:///./src/app/customers/customers-list/customers-list.component.html","webpack:///./src/app/customers/customers-list/customers-list.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"app/auth/login/login.module\": [\n\t\t\"./src/app/auth/login/login.module.ts\",\n\t\t\"app-auth-login-login-module~app-auth-register-register-module\",\n\t\t\"app-auth-login-login-module\"\n\t],\n\t\"app/auth/register/register.module\": [\n\t\t\"./src/app/auth/register/register.module.ts\",\n\t\t\"app-auth-login-login-module~app-auth-register-register-module\",\n\t\t\"app-auth-register-register-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { CreateCustomerComponent } from './customers/create-customer/create-customer.component';\r\nimport { CustomersListComponent } from './customers/customers-list/customers-list.component';\r\n\r\nimport { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { Login } from './auth/login';\r\nimport { PhoneLoginComponent } from './auth/login/phone-login/phone-login.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\r\n  {\r\n    path: 'login',\r\n    loadChildren: 'app/auth/login/login.module#LoginModule',\r\n  },\r\n  {\r\n    path: 'phonelogin',\r\n loadChildren: 'app/auth/login/login.module#LoginModule'  },\r\n  {\r\n    path: 'register',\r\n    loadChildren: 'app/auth/register/register.module#RegisterModule'\r\n  },\r\n  { path: 'customers', component: CustomersListComponent },\r\n  { path: 'add', component: CreateCustomerComponent },\r\n  { path: 'edit/:id', component: CreateCustomerComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule { }\r\nexport const routing: ModuleWithProviders = RouterModule.forChild(routes);\r\n\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div style=\\\"color: blue;\\\">\\n    <h1>{{title}}</h1>\\n    <h3>{{description}}</h3>\\n  </div>\\n  <router-outlet></router-outlet>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Paras - Demo';\n  description = 'Angular 6-Firebase Demo';\n}\n","import { AppRoutingModule } from './app-routing.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFireDatabaseModule } from 'angularfire2/database';\n\nimport { environment } from '../environments/environment';\nimport { AppComponent } from './app.component';\n\nimport { CustomersListComponent } from './customers/customers-list/customers-list.component';\nimport { CustomerDetailsComponent } from './customers/customer-details/customer-details.component';\nimport { CreateCustomerComponent } from './customers/create-customer/create-customer.component';\n\nimport { CustomerService } from './customers/customer.service';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\n@NgModule({\n  declarations: [\n    AppComponent,\n    CustomersListComponent,\n    CustomerDetailsComponent,\n    CreateCustomerComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireDatabaseModule, // for database\n    AngularFireAuthModule\n  ],\n  providers: [CustomerService],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { }\n","import 'rxjs/add/operator/toPromise';\n\nimport { Injectable } from '@angular/core';\n\n// import { Api } from '../api/api';\n// import { usercreds } from '../../models/usercreds';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport * as firebase from 'firebase';\n\nimport { CustomerService } from '../../customers/customer.service';\nimport { Observable } from 'rxjs';\nimport { AngularFireDatabase } from 'angularfire2/database';\n\nconst PROFILE_PLACEHOLDER_IMAGE_URL = '/assets/images/profile_placeholder.png';\n\n\n/**\n * Most apps have the concept of a User. This is a simple provider\n * with stubs for login/signup/etc.\n *\n * This User provider makes calls to our API at the `login` and `signup` endpoints.\n *\n * By default, it expects `login` and `signup` to return a JSON object of the shape:\n *\n * ```json\n * {\n *   status: 'success',\n *   user: {\n *     // User fields your app needs, like \"id\", \"name\", \"email\", etc.\n *   }\n * }Ø\n * ```\n *\n * If the `status` field is not `success`, then an error is detected and returned.\n */\n@Injectable()\nexport class User {\n  _user: any;\n  user: Observable<firebase.User>;\n  currentUser: firebase.User;\n  messages: Observable<any[]>;\n  profilePicStyles: {};\n \n  firedata = firebase.database().ref('/userDetails');\n  topics: string;\n\n  constructor (public db: AngularFireDatabase, public afireauth: AngularFireAuth , private customerService : CustomerService ) { \n        this.user = afireauth.authState;\n    this.user.subscribe((user: firebase.User) => {\n      console.log(user);\n      this.currentUser = user;\n\n      if (user) { // User is signed in!\n        this.profilePicStyles = {\n          'background-image':  `url(${this.currentUser.photoURL})`\n        };\n\n        // We load currently existing chat messages.\n        this.messages = this.db.list<any>('/messages', ref => ref.limitToLast(12)).valueChanges();\n        this.messages.subscribe((messages) => {\n          // Calculate list of recently discussed topics\n          const topicsMap = {};\n          const topics = [];\n          let hasEntities = false;\n          messages.forEach((message) => {\n            if (message.entities) {\n              for (let entity of message.entities) {\n                if (!topicsMap.hasOwnProperty(entity.name)) {\n                  topicsMap[entity.name] = 0\n                }\n                topicsMap[entity.name] += entity.salience;\n                hasEntities = true;\n              }\n            }\n          });\n          if (hasEntities) {\n            for (let name in topicsMap) {\n              topics.push({ name, score: topicsMap[name] });\n            }\n            topics.sort((a, b) => b.score - a.score);\n            this.topics = topics.map((topic) => topic.name).join(', ');\n          }\n\n          // Make sure new message scroll into view\n      \n        });\n\n        // We save the Firebase Messaging Device token and enable notifications.\n        // this.saveMessagingDeviceToken();\n      } else { // User is signed out!\n        this.profilePicStyles = {\n          'background-image':  PROFILE_PLACEHOLDER_IMAGE_URL\n        };\n        this.topics = '';\n      }\n    });\n  }\n\n  /**\n   * Send a POST request to our login endpoint with the data\n   * the user entered on the form.\n   */\n  // login(accountInfo: any) {\n  //   // let seq = this.api.post('ff/login', accountInfo).share();\n\n  //   seq.subscribe((res: any) => {\n  //     // If the API returned a successful response, mark the user as logged in\n  //     if (res.status == 'success') {\n  //       this._loggedIn(res);\n  //     } else {\n  //     }\n  //   }, err => {\n  //     console.error('ERROR', err);\n      \n  //   });\n\n  //   return seq;\n  // }\n\n  /**\n   * Send a POST request to our signup endpoint with the data\n   * the user entered on the form.\n   */\n  // signup(accountInfo: any) {\n  //   let seq = this.api.post('signup', accountInfo).share();\n\n  //   seq.subscribe((res: any) => {\n  //     // If the API returned a successful response, mark the user as logged in\n  //     if (res.status == 'success') {\n  //       this._loggedIn(res);\n  //     }\n  //   }, err => {\n  //     console.error('ERROR', err);\n  //   });\n\n  //   return seq;\n  // }\n\n  /**\n   * Log the user out, which forgets the session\n   */\n  // logout() {\n  //   this._user = null;\n  // }\n\n  /**\n   * Process a login/signup response to store user data\n   */\n  _loggedIn(resp) {\n    this._user = resp.user;\n  }\n\n\n\n\n  loginWithFirebase(credentials) {\n    var promise = new Promise((resolve, reject) => {\n      this.loginUser(credentials.email, credentials.password).then((res) => {\n       console.log(res);\n        resolve(true);\n      }).catch((err) => {\n        console.log( err);\n        reject(err);\n       })\n    })\n\n    return promise;\n    \n  }\n  loginUser(email: string, password: string): Promise<any> {\n    return this.afireauth.auth.signInWithEmailAndPassword(email, password);\n  }\n\n//Sign up with Fire base \n\n  adduser(newuser) {\n    var promise = new Promise((resolve, reject) => {\n      this.afireauth.auth.createUserWithEmailAndPassword(newuser.email, newuser.password).then(() => {\n        this.afireauth.auth.currentUser.updateProfile({\n          displayName: newuser.firstName,\n          photoURL: 'https://firebasestorage.googleapis.com/v0/b/myapp-4eadd.appspot.com/o/chatterplace.png?alt=media&token=e51fa887-bfc6-48ff-87c6-e2c61976534e'\n        }).then(() => {\n            this.customerService.setpath('UserDetails');\n            this.customerService.createCustomer(newuser);\n            return true;\n          })\n          }).catch((err) => {\n            reject(err);\n        })\n      }).catch((err) => {\n      })\n      return promise ;\n    }\n\n\n    loginWithGoogle()\n    {\n     return this.afireauth.auth.signInWithPopup(new firebase.auth.GoogleAuthProvider());\n    }\n    loginWithGit()\n    {\n     return this.afireauth.auth.signInWithPopup(new firebase.auth.GithubAuthProvider());\n    }\n    logout() {\n      this.afireauth.auth.signOut();\n    }\n\n}\n","module.exports = \".profile-image-wrapper {\\r\\n    text-align: center;\\r\\n    margin: 20px 0;\\r\\n\\r\\n  \\r\\n\\r\\n    .profile-image-placeholder {\\r\\n      display: inline-block;\\r\\n\\r\\n      background-color: #eee;\\r\\n      width: 96px;\\r\\n      height: 96px;\\r\\n      border-radius: 50%;\\r\\n\\r\\n      font-size: 12px;\\r\\n\\r\\n      ion-icon {\\r\\n        font-size: 44px;\\r\\n        margin-bottom: -10px;\\r\\n        margin-top: 10px;\\r\\n      }\\r\\n    }\\r\\n}\\r\\n.profile-image {\\r\\n  width: 96px;\\r\\n  height: 96px;\\r\\n  border-radius: 50%;\\r\\n\\r\\n  display: inline-block;\\r\\n\\r\\n  background-repeat: no-repeat;\\r\\n  background-size: cover;\\r\\n  background-position: center;\\r\\n}\"","module.exports = \"<h2>Set Custom path</h2>\\n\\n<div class=\\\"form-group col-md-12\\\">\\n\\t<label for=\\\"age\\\">Path name </label> <input type=\\\"text\\\"\\n\\t\\tclass=\\\"form-control\\\" id=\\\"age\\\" required [(ngModel)]=\\\"custompath\\\"\\n\\t\\tname=\\\"age\\\">\\n<button type=\\\"button\\\" (click)=\\\"setPath()\\\" style=\\\"margin: 20px\\\" class=\\\"col-md-3 btn btn-success\\\">Set Path</button>\\n\\n</div>\\n\\n\\n\\n\\n<h3>Create Customer</h3>\\n\\n\\n<div [hidden]=\\\"submitted\\\" class=\\\"col-md-12\\\" style=\\\"width: 300px;\\\">\\n\\t<form (ngSubmit)=\\\"onSubmit()\\\">\\n\\t\\t\\t<input type=\\\"file\\\" #fileInput  name=\\\"files[]\\\"  (change)=\\\"processWebImage($event)\\\" />\\n\\t\\t\\t<div class=\\\"profile-image-wrapper\\\" >\\n\\t\\t\\t  <img src=\\\"{{Profilepic}}\\\"  class=\\\"profile-image\\\" *ngIf=\\\"Profilepic != null\\\" title=\\\"profile\\\" alt=\\\"Profile\\\"  >\\n\\t\\t\\t</div>\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t<label for=\\\"name\\\">Name</label> <input type=\\\"text\\\"\\n\\t\\t\\t\\tclass=\\\"form-control\\\" id=\\\"name\\\" required [(ngModel)]=\\\"customer.name\\\"\\n\\t\\t\\t\\tname=\\\"name\\\">\\n\\t\\t</div>\\n\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t<label for=\\\"age\\\">Age</label> <input type=\\\"text\\\"\\n\\t\\t\\t\\tclass=\\\"form-control\\\" id=\\\"age\\\" required [(ngModel)]=\\\"customer.age\\\"\\n\\t\\t\\t\\tname=\\\"age\\\">\\n\\t\\t</div>\\n\\t\\t<div class=\\\"row\\\">\\n\\t\\t<button type=\\\"submit\\\" *ngIf=\\\"!editMode\\\" style=\\\"margin: 20px\\\" class=\\\"col-md-3 btn btn-success\\\">Submit</button>\\n\\t\\t<button type=\\\"button\\\" (click)=\\\" updateActive()\\\" style=\\\"margin: 20px\\\" class=\\\"col-md-3 btn btn-success\\\">Update</button>\\n\\t\\t</div>\\n\\n\\t</form>\\n</div>\\n\\n<div [hidden]=\\\"!submitted\\\">\\n\\t<h4>Data submitted successfully!</h4>\\n\\t<button class=\\\"btn btn-success\\\" style=\\\"margin: 20px\\\" (click)=\\\"newCustomer()\\\"> Great!!!</button>\\n</div>\\n\"","import { Component, OnInit, Input, SimpleChanges } from '@angular/core';\n\nimport { Customer } from '../customer';\nimport { CustomerService } from '../customer.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { isUndefined } from 'util';\n\n\n@Component({\n  selector: 'create-customer',\n  templateUrl: './create-customer.component.html',\n  styleUrls: ['./create-customer.component.css']\n})\nexport class CreateCustomerComponent implements OnInit {\n  @Input() selectedcustomer: Customer;\n\n  custompath;\n  customer: Customer = new Customer();\n  submitted = false;\n  Profilepic = null;\n  editMode: boolean;\n  constructor(private route: ActivatedRoute, private customerService: CustomerService) { }\n  // tslint:disable-next-line:use-life-cycle-interface\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.selectedcustomer.currentValue) {\n      this.customer = changes.selectedcustomer.currentValue;\n      this.Profilepic = this.customer.profilePic ? this.customer.profilePic : null;\n\n    }\n    // changes.prop contains the old and the new value...\n  }\n  ngOnInit() {\n\n    this.route.params.subscribe(key => {\n      if (!isUndefined(key.id)) {\n        this.getCustomersList(key.id).subscribe();\n\n        this.editMode = true;\n      }\n    });\n    // this.this.customerService\n\n\n\n  }\n  getCustomersList(key) {\n    // Use snapshotChanges().map() to store the key\n    // tslint:disable-next-line:prefer-const\n    let subscriber = this.customerService.getCustomersList().snapshotChanges().map(changes => {\n      changes.forEach(c => {\n        if (key === c.key) {\n          this.customer = { key: c.payload.key, ...c.payload.val() }\n          this.Profilepic = this.customer.profilePic ? this.customer.profilePic : null;\n\n\n        }\n      });\n\n\n    });\n    return subscriber;\n  }\n\n  newCustomer(): void {\n    this.submitted = false;\n    this.customer = new Customer();\n  }\n\n  save() {\n    this.customerService.createCustomer(this.customer);\n    this.customer = new Customer();\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    this.save();\n  }\n\n  updateActive() {\n    this.submitted = true;\n    this.customerService.updateCustomer(this.customer.key, this.customer);\n  }\n  setPath() {\n    this.customerService.setpath(this.custompath);\n  }\n  processWebImage(event) {\n    const reader = new FileReader();\n    reader.onload = (readerEvent) => {\n\n      const imageData = (readerEvent.target as any).result;\n      this.customer.profilePic = imageData;\n      this.customer.file = event.target.files[0];\n    };\n\n    reader.readAsDataURL(event.target.files[0]);\n  }\n  getProfileImageStyle() {\n    // return 'url(' + this.customer.profilePic + ')';\n    this.Profilepic = this.customer.profilePic;\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"customer\\\">\\n\\t\\t<div>\\n\\t\\t\\t\\t<label>Key: </label> {{customer.key}}\\n\\t\\t\\t</div>\\n\\t<div>\\n\\t\\t<label>First Name: </label> {{customer.name}}\\n\\t</div>\\n\\t<div>\\n\\t\\t<label>Age: </label> {{customer.age}}\\n\\t</div>\\n\\t<div>\\n\\t\\t<label>Active: </label> {{customer.active}}\\n\\t</div>\\n\\n\\t<span class=\\\"button is-small btn-primary\\\" *ngIf='customer.active' (click)='updateActive(false)'>Inactive</span>\\n\\t\\n\\t<span class=\\\"button is-small btn-primary\\\" *ngIf='!customer.active' (click)='updateActive(true)'>Active</span>\\n\\n\\t<span class=\\\"button is-small btn-danger\\\" (click)='deleteCustomer()'>Delete</span>\\n\\n\\t<span class=\\\"button is-small btn-primary\\\" (click)='Edit()'>Edit</span>\\n\\t\\n\\t<hr/>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\n\nimport { CustomerService } from '../customer.service';\nimport { Customer } from '../customer';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'customer-details',\n  templateUrl: './customer-details.component.html',\n  styleUrls: ['./customer-details.component.css']\n})\nexport class CustomerDetailsComponent implements OnInit {\n\n  @Input() customer: Customer;\n\n  constructor(private customerService: CustomerService , private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  updateActive(isActive: boolean) {\n    this.customerService.updateCustomer(this.customer.key, { active: isActive });\n  }\n\n  deleteCustomer() {\n    this.customerService.deleteCustomer(this.customer.key);\n  }\n  Edit(){\n    this.router.navigate(['edit', this.customer.key]);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireDatabase, AngularFireList } from 'angularfire2/database';\nimport { Customer } from './customer';\n\n@Injectable()\nexport class CustomerService {\n\n  private dbPath = '/customers';\n  private rootnodelist = '/';\n\n\n  customersRef: AngularFireList<Customer> = null;\n  rootNodes: AngularFireList<Customer> = null;\n\n  constructor(private db: AngularFireDatabase) {\n    this.customersRef = db.list(this.dbPath);\n    this.rootNodes = db.list(this.rootnodelist);\n  }\n\n  setpath(path){\n    this.dbPath = '/' + path;\n    console.log(this.dbPath);\n    this.customersRef = this.db.list(this.dbPath);\n  }\n  getCurrentpath(){\n   return this.dbPath;\n  }\n  createCustomer(customer: Customer): void {\n    this.customersRef.push(customer);\n  }\n\n  updateCustomer(key: string, value: any): void {\n    this.customersRef.update(key, value).catch(error => this.handleError(error));\n  }\n\n  deleteCustomer(key: string): void {\n    this.customersRef.remove(key).catch(error => this.handleError(error));\n  }\n\n  getCustomersList(): AngularFireList<Customer> {\n    return this.customersRef;\n  }\n  getRootNodeList(): AngularFireList<Customer> {\n    return this.rootNodes;\n  }\n\n  deleteAll(): void {\n    this.customersRef.remove().catch(error => this.handleError(error));\n  }\n\n  private handleError(error) {\n    console.log(error);\n  }\n}\n","export class Customer {\n  key: string;\n  name: string;\n  age: number;\n  active = true;\n  profilePic: string;\n  file: any;\n}\n","module.exports = \"\\r\\n.mdl-card {\\r\\n    min-height: 0;\\r\\n  }\\r\\n  .mdl-card {\\r\\n    background: linear-gradient(white, #f9f9f9);\\r\\n    justify-content: space-between;\\r\\n  }\\r\\n  #user-container {\\r\\n    position: absolute;\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    top: 22px;\\r\\n    width: 100%;\\r\\n    right: 0;\\r\\n    padding-left: 10px;\\r\\n    justify-content: flex-end;\\r\\n    padding-right: 10px;\\r\\n  }\\r\\n  #user-container #user-pic {\\r\\n    top: -3px;\\r\\n    position: relative;\\r\\n    display: inline-block;\\r\\n    background-image: url('/assets/images/profile_placeholder.png');\\r\\n    background-repeat: no-repeat;\\r\\n    width: 40px;\\r\\n    height: 40px;\\r\\n    background-size: 40px;\\r\\n    border-radius: 20px;\\r\\n  }\\r\\n  #user-container #user-name {\\r\\n    font-size: 16px;\\r\\n    line-height: 36px;\\r\\n    padding-right: 10px;\\r\\n    padding-left: 20px;\\r\\n  }\\r\\n  #image-form #submitImage {\\r\\n    width: auto;\\r\\n    padding: 0 6px 0 1px;\\r\\n    min-width: 0;\\r\\n  }\\r\\n  #image-form #submitImage .material-icons {\\r\\n    top: -1px;\\r\\n  }\\r\\n  .message img {\\r\\n    max-width: 300px;\\r\\n    max-height: 200px;\\r\\n  }\\r\\n  #mediaCapture {\\r\\n    display: none;\\r\\n  }\\r\\n  @media screen and (max-width: 610px) {\\r\\n    header {\\r\\n      height: 113px;\\r\\n      padding-bottom: 80px !important;\\r\\n    }\\r\\n    #user-container {\\r\\n      top: 72px;\\r\\n      background-color: rgb(3,155,229);\\r\\n      height: 38px;\\r\\n      padding-top: 3px;\\r\\n      padding-right: 2px;\\r\\n    }\\r\\n    #user-container #user-pic {\\r\\n      top: 2px;\\r\\n      width: 33px;\\r\\n      height: 33px;\\r\\n      background-size: 33px;\\r\\n    }\\r\\n  }\\r\\n  .mdl-textfield__label:after {\\r\\n    background-color: #0288D1;\\r\\n  }\\r\\n  .mdl-textfield--floating-label.is-focused .mdl-textfield__label {\\r\\n    color: #0288D1;\\r\\n  }\\r\\n  .mdl-button .material-icons {\\r\\n    top: -1px;\\r\\n    margin-right: 5px;\\r\\n  }\\r\\n  \"","module.exports = \"<header class=\\\"navbar-header\\\">\\n   <div id=\\\"user-container\\\">\\n\\t<img *ngIf=\\\"currentUser\\\" id=\\\"user-pic\\\" src=\\\"{{currentUser.photoURL}}\\\">\\n\\t<div *ngIf=\\\"currentUser\\\" id=\\\"user-name\\\">{{ currentUser?.displayName }}</div>\\n\\t<button *ngIf=\\\"currentUser\\\" id=\\\"sign-out\\\" (click)=\\\"logout()\\\" class=\\\" btn btn-warning\\\">\\n\\t  Sign-out\\n\\t</button>\\n\\t<button *ngIf=\\\"!currentUser\\\" id=\\\"sign-in\\\" (click)=\\\"login()\\\" class=\\\"mdl-button mdl-js-button mdl-js-ripple-effect mdl-color-text--white\\\">\\n\\t\\t<i class=\\\"socicon socicon-google\\\" aria-hidden=\\\"true\\\"></i>Sign-in with Google\\n\\t</button>\\n\\t</div>\\n</header>\\n\\t\\n<nav class=\\\"navbar-brand\\\">\\n\\t\\t<a routerLink=\\\"/customers\\\" class=\\\"btn btn-primary active\\\" role=\\\"button\\\" routerLinkActive=\\\"active\\\">Customers</a>\\n\\t\\t<a routerLink=\\\"/add\\\" class=\\\"btn btn-primary active\\\" role=\\\"button\\\" routerLinkActive=\\\"active\\\">Add</a>\\n\\t  </nav>\\n<body>\\n<h1>Current path is \\\"{{currentpath}}\\\" </h1>\\n<div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col-md-4\\\">\\n\\t\\t\\t\\t<div  (click)=\\\"rootClicked(node)\\\" *ngFor=\\\"let node of rootNodesList\\\">\\n\\t\\t\\t\\t{{node.key}}\\t\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t</div>\\n\\n\\t<div class=\\\"col-md-4\\\">\\n\\t\\t\\t<div style=\\\"margin-bottom:20px;\\\">\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"button btn-danger\\\" (click)='deleteCustomers()'>Delete All</button>\\n\\t\\t\\t\\t</div>\\n\\t\\t<div  (click)=\\\"isClicked(customer)\\\" *ngFor=\\\"let customer of customers\\\">\\n\\t\\t\\t<customer-details [customer]='customer'></customer-details>\\n\\t\\t</div>\\n\\t</div>\\n\\t<div class=\\\"col-md-4\\\">\\n\\t\\t<create-customer [selectedcustomer]='selectedcustomer'> </create-customer>\\n\\t</div>\\n</div>\\n</body>\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { CustomerService } from '../customer.service';\nimport { Customer } from '../customer';\nimport 'rxjs/add/operator/map';\nimport { isObject } from 'util';\nimport { User } from '../../auth/user/user';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'customers-list',\n  templateUrl: './customers-list.component.html',\n  styleUrls: ['./customers-list.component.css'],\n  providers: [User]\n})\nexport class CustomersListComponent implements OnInit {\n\n  customers: any;\n  selectedcustomer: any;\n  currentpath: string;\n  rootNodesList;\n  currentUser: any;\n  profilePicStyles: { 'background-image': string; };\n  constructor(private customerService: CustomerService, private user: User  , private router: Router) {\n    // this.user.loginWithFirebase({email:\"mparas143@gmail.com\",password:\"Admin@123\"}).then(res=>{\n    //   console.log(res);\n    // }).catch(err =>{\n    //   console.log(err);\n    // })\n    this.user.user.subscribe(user => {\n      console.log(user);\n      this.currentUser = user;\n      if (user) { // User is signed in!\n        this.profilePicStyles = {\n\n          'background-image': `url(${this.currentUser.photoURL})`\n\n        }\n        if(this.currentUser){\n          this.getCustomersList();\n          this.getRootNodeList();\n          this.currentpath = this.customerService.getCurrentpath();\n         }\n      }\n\n    });\n  }\n\n  ngOnInit() {\n     // console.log(this.customerService.getRootNodeList());\n  }\n  login() {\n    this.user.loginWithGoogle().then((response) => {\n      console.log(response);\n\n    })\n      .catch((error) => {\n\n        alert(error.message);\n      },\n\n    );\n\n\n  }\n  logout() {\n    this.user.logout();\n    this.router.navigate(['login']);\n    \n  }\n  getCustomersList() {\n    // Use snapshotChanges().map() to store the key\n    this.customerService.getCustomersList().snapshotChanges().map(changes => {\n      return changes.map(c => ({ key: c.payload.key, ...c.payload.val() }));\n    }).subscribe(customers => {\n      this.customers = customers;\n    });\n  }\n  getRootNodeList() {\n    // Use snapshotChanges().map() to store the key\n    this.customerService.getRootNodeList().snapshotChanges().map(changes => {\n      // console.log(changes);\n      return changes.map(c => ({ key: c.payload.key, ...c.payload.val() }));\n    }).subscribe(customers => {\n      //  console.log(customers);\n      customers.forEach(element => {\n        //  console.log( (  element));\n        console.log(Object.keys(element).map(function (personNamedIndex) {\n          let person = element[personNamedIndex];\n          // console.log(isObject(person))\n          // do something with person\n          return person;\n        }));\n      });\n      this.rootNodesList = customers;\n    });\n  }\n  deleteCustomers() {\n    this.customerService.deleteAll();\n  }\n  isClicked(customer) {\n    this.selectedcustomer = customer;\n  }\n  rootClicked(node) {\n    this.customerService.setpath(node.key);\n    this.getCustomersList();\n  }\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  firebase: {\n    apiKey: 'AIzaSyAK9ui3c3H45q2djHCn-2XA5CbRXKhV1ns',\n    authDomain: 'friendlychat-a1af5.firebaseapp.com',\n    databaseURL: 'https://friendlychat-a1af5.firebaseio.com',\n    projectId: 'friendlychat-a1af5',\n    storageBucket: 'friendlychat-a1af5.appspot.com',\n    messagingSenderId: '460406992772'\n  },\n  production: false,\n\n};\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}