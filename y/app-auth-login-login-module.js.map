{"version":3,"sources":["webpack:///./src/app/auth/login/login.module.ts","webpack:///./src/app/auth/login/login.routing.ts","webpack:///./src/app/auth/login/phone-login/phone-login.component.css","webpack:///./src/app/auth/login/phone-login/phone-login.component.html","webpack:///./src/app/auth/login/phone-login/phone-login.component.ts","webpack:///./src/app/shared/services/window.service.ts"],"names":[],"mappings":"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","file":"app-auth-login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\nimport { Login } from './login.component';\nimport { routing } from './login.routing';\nimport { User } from '../user/user';\nimport { PhoneLoginComponent } from './phone-login/phone-login.component';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    routing\n  ],\n  declarations: [\n    Login,\n    PhoneLoginComponent\n  ],\n  providers: [\n    User]\n})\nexport class LoginModule { }\n","// tslint:disable-next-line:import-spacing\nimport { Routes, RouterModule }  from '@angular/router';\n\nimport { Login } from './login.component';\nimport { ModuleWithProviders } from '@angular/core';\n\n// noinspection TypeScriptValidateTypes\nexport const routes: Routes = [\n  {\n    path: '',\n    component: Login\n  }\n];\n\nexport const routing: ModuleWithProviders = RouterModule.forChild(routes);\n","module.exports = \".inputlabelcommon{\\r\\n    border: 1px solid black !important;\\r\\n        border-radius: 0px !important;\\r\\n            color: black !important;\\r\\n\\r\\n\\r\\n}\"","module.exports = \"<div [hidden]=\\\"user\\\">\\n    <!-- <h1>Sign In with Your Phone Number</h1> -->\\n  \\n    <label for=\\\"phone\\\">Phone Number</label><br>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"phoneNumber.country\\\"  class=\\\"input form-control inputlabelcommon \\\" placeholder=\\\"Country code\\\"    maxlength=\\\"2\\\">\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"phoneNumber.area\\\"     class=\\\"input form-control inputlabelcommon \\\" placeholder=\\\"Contact number\\\"  maxlength=\\\"10\\\">\\n    <!-- <input type=\\\"text\\\" [(ngModel)]=\\\"phoneNumber.prefix\\\"   class=\\\"input\\\" placeholder=\\\"555\\\"  maxlength=\\\"3\\\">\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"phoneNumber.line\\\"     class=\\\"input\\\" placeholder=\\\"5555\\\" maxlength=\\\"4\\\"> -->\\n  \\n    <div id=\\\"recaptcha-container\\\"></div>\\n  \\n    <button class=\\\"btn btn-success commonbutton\\\" *ngIf=\\\"windowRef.recaptchaVerifier\\\" (click)=\\\"sendLoginCode()\\\">SMS Text Login Code</button>\\n  \\n    <div *ngIf=\\\"windowRef.confirmationResult\\\">\\n      <hr>\\n      <label for=\\\"code\\\">Enter your Verification Code Here</label><br>\\n      <input type=\\\"text\\\" name=\\\"code\\\" [(ngModel)]=\\\"verificationCode\\\">\\n  \\n      <button class=\\\"btn btn-success commonbutton\\\" (click)=\\\"verifyLoginCode()\\\">Verify</button>\\n    </div>\\n  \\n  </div>\\n  \\n  <div *ngIf=\\\"user\\\">\\n    You have successfully logged in with your phone number!\\n  \\n    UserId: {{ user?.uid }}\\n  \\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { WindowService } from '../../../shared/services/window.service';\nimport * as firebase from 'firebase';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-phone-login',\n  templateUrl: './phone-login.component.html',\n  styleUrls: ['./phone-login.component.css']\n})\nexport class PhoneLoginComponent implements OnInit {\n  windowRef: any;\n\n  phoneNumber = new PhoneNumber();\n\n  verificationCode: string;\n\n  user: any;\n\n  constructor(private win: WindowService , private router: Router) { }\n\n  ngOnInit() {\n    this.windowRef = this.win.windowRef;\n    this.windowRef.recaptchaVerifier = new firebase.auth.RecaptchaVerifier('recaptcha-container');\n\n    this.windowRef.recaptchaVerifier.render();\n  }\n\n\n  sendLoginCode() {\n\n    const appVerifier = this.windowRef.recaptchaVerifier;\n    console.log(this.windowRef.recaptchaVerifier)\n    const num = this.phoneNumber.e164;\n\n    firebase.auth().signInWithPhoneNumber(num, appVerifier)\n            .then(result => {\n                console.log(result);\n                this.windowRef.confirmationResult = result;\n\n            })\n            .catch( error => console.log(error) );\n\n  }\n\n  verifyLoginCode() {\n    this.windowRef.confirmationResult\n                  .confirm(this.verificationCode)\n                  .then( result => {\n\n                    this.user = result.user;\n          this.router.navigate(['customers']);\n                    \n    })\n    .catch( error => console.log(error, 'Incorrect code entered?'));\n  }\n\n\n}\nexport class PhoneNumber {\n  country: string;\n  area: string;\n  prefix: string;\n  line: string;\n\n  // format phone numbers as E.164\n  get e164() {\n    const num = this.country + this.area ;\n   console.log(num);\n    return `+${num}`;\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WindowService {\n  get windowRef() {\n    return window;\n  }\n  constructor() { }\n}\n"],"sourceRoot":""}