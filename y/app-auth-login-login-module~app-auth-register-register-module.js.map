{"version":3,"sources":["webpack:///./src/app/auth/login/login.component.ts","webpack:///./src/app/auth/login/login.html","webpack:///./src/app/auth/login/login.scss"],"names":[],"mappings":"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","file":"app-auth-login-login-module~app-auth-register-register-module.js","sourcesContent":["\n// <!---\n// *  File Name: login.ts\n// *  Attached HTML : login.html\n// *  Created By: <Paras Shah>\n// *  Created Date: 10/8/2017\n// *  Purpose: <Login to sing Email id and password >\n// *  * DEPENDENCIES ( postData / of user services)\n// *  -\n// *  - \n// -->\n//Created by Paras Shah on 10/8/17\nimport { Component } from '@angular/core';\nimport { FormGroup, AbstractControl, FormBuilder, Validators } from '@angular/forms';\n// import { userService } from '../../theme/services';\nimport { Router } from '@angular/router';\nimport { User } from '../user/user';\nimport { CustomersListComponent } from '../../customers/customers-list/customers-list.component';\n// import { EmailValidator, EqualPasswordsValidator } from '../../theme/validators';\n// import { CookieService } from 'ngx-cookie';\n\n\n@Component({\n  selector: 'login',\n  templateUrl: './login.html',\n  styleUrls: ['./login.scss'],\n})\n\nexport class Login {\n  errormessage: any;\n\n  public form: FormGroup;\n  public userName: AbstractControl;\n  public password: AbstractControl;\n  public submitted: boolean = false;\n  trolleyDetail: {};\n  unamePwd = null;\n  getuserid = null;\n  userid = null;\n  contactlogin = false;\n\n  logindata: {};\n  loginuser: {};\n  constructor(fb: FormBuilder, private user: User, private router: Router) {\n    user.logout();\n    this.form = fb.group({\n      'userName': ['', Validators.compose([Validators.required, EmailValidator.validate])],\n      'password': ['', Validators.compose([Validators.required, Validators.minLength(2)])],\n    });\n\n    this.userName = this.form.controls['userName'];\n\n    this.password = this.form.controls['password'];\n  }\n\n//Login with phone\nloginwithNumber(){\n  this.contactlogin = this.contactlogin ? false : true ;\n}\n// this method is used to call function loginwith google by which user can esily login using google credentials\n  login(){\n    this.user.loginWithGoogle().then((response) => {\n      console.log(response);\n       if(response != null){\n        this.router.navigate(['customers']);\n      }\n    })\n      .catch((error) => {\n      \n        JSON.stringify(error);\n        let temp = error.message;\n\n        // to show error like wrong password \n        this.errormessage = temp;\n\n      },\n\n    );\n\n\n  }\n\n\n  //Login with git hub \n\n  loginGit(){\n    this.user.loginWithGit().then((response) => {\n      console.log(response);\n       if(response != null){\n        this.router.navigate(['customers']);\n      }\n    })\n      .catch((error) => {\n      \n        JSON.stringify(error);\n        let temp = error.message;\n\n        // to show error like wrong password \n        this.errormessage = temp;\n\n      },\n\n    );\n\n  }\n\n\n  ngOnInit() {\n\n    // Removing all cookies at first loading \n  }\n  public onSubmit(values): void {\n    this.submitted = true;\n    if (this.form.valid) {\n      this.errormessage = '';\n      // your code goes here\n      const Credetials = {\n        credential: {\n          email: values.userName,\n\n          password: values.password,\n        },\n\n      };\n      //this.ffurl = \"User/login\";\n      // this.user.getUsers(this.ffurl, data).subscribe(data => this.trolleyDetail = data.result);   \n\n      /**------------------------------------------------------------------------------------------\n              *  Created By: Paras Shah\n              *  Created Date:10/8/2017\n              *  Purpose: <POST method post Credentials object to authenticate user>\n  ------------------------------------------------------------------------------------------*/\n      this.user.loginWithFirebase( Credetials.credential).then((response) => {\n        if(response != null){\n          this.router.navigate(['customers']);\n        }\n      })\n        .catch((error) => {\n        \n          JSON.stringify(error);\n          let temp = error.message;\n\n          // to show error like wrong password \n          this.errormessage = temp;\n\n        },\n\n      );\n\n\n    }\n  }\n}\nexport class EmailValidator {\n\n  public static validate(c: AbstractControl) {\n    let EMAIL_REGEXP = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    return EMAIL_REGEXP.test(c.value) ? null : {\n      validateEmail: {\n        valid: false\n      }\n    };\n  }\n}\n\n","module.exports = \"<div class=\\\"auth-main\\\">\\n  <div class=\\\"auth-block\\\">\\n    <h1 >Login </h1>\\n   <u> <a routerLink=\\\"/register\\\" class=\\\"auth-link\\\" >Sign up link</a></u>\\n   <button  id=\\\"sign-in\\\" type=\\\"button\\\" (click)=\\\"login()\\\" class=\\\"btn btn-success commonbutton \\\">\\n   Sign-in with Google\\n  </button>\\n  <button  id=\\\"sign-in\\\" type=\\\"button\\\" (click)=\\\"loginGit()\\\" class=\\\"btn btn-success commonbutton \\\">\\n    Sign-in with Github\\n   </button>\\n  <button  id=\\\"sign-in\\\" type=\\\"button\\\" (click)=\\\"loginwithNumber()\\\" class=\\\"btn btn-success commonbutton \\\">\\n    Sign-in with Phone number\\n   </button>\\n    <form *ngIf=\\\"!contactlogin\\\"  [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit(form.value)\\\" class=\\\"form-horizontal\\\">\\n      <div class=\\\"form-group row\\\" [ngClass]=\\\"{'has-error': (!userName.valid && userName.touched), 'has-success': (userName.valid && userName.touched)}\\\">\\n        <!-- <label for=\\\"inputuserName3\\\" class=\\\"col-sm-2 control-label\\\" >User Name</label> -->\\n\\n        <div class=\\\"col-sm-12\\\">\\n          <input [formControl]=\\\"userName\\\" type=\\\"userName\\\" class=\\\"form-control inputlabelcommon\\\" id=\\\"inputuserName3\\\" placeholder=\\\"User Name\\\">\\n        </div>\\n         <!--for email validation-->\\n                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"userName.valid || userName.untouched\\\">\\n        <div  style= \\\" padding-left: 100px ; color: red;\\\" *ngIf=\\\"userName.errors && userName.errors.required\\\">\\n           <div> Email is required</div>\\n        </div>\\n        <div  style= \\\" padding-left: 100px ; color: red;\\\" *ngIf=\\\"userName.errors && !userName.valid && !userName.errors.required\\\">\\n            Email is invalid\\n        </div>\\n    </div>\\n\\n                <!--for email validation-->\\n      </div>\\n      <div class=\\\"form-group row\\\" [ngClass]=\\\"{'has-error': (!password.valid && password.touched), 'has-success': (password.valid && password.touched)}\\\">\\n        <!-- <label for=\\\"inputPassword3\\\" class=\\\"col-sm-2 control-label\\\" >Password</label> -->\\n\\n        <div class=\\\"col-sm-12\\\">\\n          <input [formControl]=\\\"password\\\" type=\\\"password\\\" class=\\\"form-control inputlabelcommon\\\" id=\\\"inputPassword3\\\" placeholder=\\\"Password\\\">\\n        </div>\\n      </div>\\n      <div style=\\\"color: red\\\">{{errormessage}}</div>\\n      <div class=\\\"form-group row\\\">\\n        <div class=\\\"offset-sm-2 col-sm-10\\\">\\n          <button [disabled]=\\\"!form.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-success \\\" >sign in</button>\\n          <!-- <a routerLink=\\\"/forgotpassword\\\" class=\\\"forgot-pass\\\" >forgot Password</a> -->\\n        </div>\\n      </div>\\n    </form>\\n    <app-phone-login *ngIf=contactlogin ></app-phone-login>\\n    \\n \\n  </div>\\n</div>\\n\"","module.exports = \".auth-main {\\n  display: flex;\\n  align-items: center;\\n  height: 100%;\\n  width: 100%;\\n  position: absolute;\\n  background-color: white;\\n  top: 19%; }\\n\\n.auth-block {\\n  width: 540px;\\n  margin: 0 auto;\\n  border-radius: 5px;\\n  color: black;\\n  padding: 32px;\\n  border: 3px solid black; }\\n\\n.auth-block h1 {\\n    font-weight: 200;\\n    margin-bottom: 28px;\\n    text-align: center; }\\n\\n.auth-block p {\\n    font-size: 16px; }\\n\\n.auth-block a {\\n    text-decoration: none;\\n    outline: none;\\n    transition: all 0.2s ease;\\n    color: black; }\\n\\n.auth-block a:hover {\\n      color: black; }\\n\\n.auth-block .control-label {\\n    padding-top: 11px;\\n    color: black; }\\n\\n.auth-block .form-group {\\n    margin-bottom: 12px; }\\n\\n.auth-input {\\n  width: 300px;\\n  margin-bottom: 24px; }\\n\\n.auth-input input {\\n    display: block;\\n    width: 100%;\\n    border: none;\\n    font-size: 16px;\\n    padding: 4px 10px;\\n    outline: none; }\\n\\na.forgot-pass {\\n  display: block;\\n  text-align: right;\\n  margin-bottom: -20px;\\n  float: right;\\n  z-index: 2;\\n  position: relative; }\\n\\n.auth-link {\\n  display: block;\\n  font-size: 16px;\\n  text-align: center;\\n  margin-bottom: 33px; }\\n\\n.auth-sep {\\n  margin-top: 36px;\\n  margin-bottom: 24px;\\n  line-height: 20px;\\n  font-size: 16px;\\n  text-align: center;\\n  display: block;\\n  position: relative; }\\n\\n.auth-sep > span {\\n    display: table-cell;\\n    width: 30%;\\n    white-space: nowrap;\\n    padding: 0 24px;\\n    color: black; }\\n\\n.auth-sep > span > span {\\n      margin-top: -12px;\\n      display: block; }\\n\\n.auth-sep:before, .auth-sep:after {\\n    border-top: solid 1px black;\\n    content: \\\"\\\";\\n    height: 1px;\\n    width: 35%;\\n    display: table-cell; }\\n\\n.al-share-auth {\\n  text-align: center; }\\n\\n.al-share-auth .al-share {\\n    float: none;\\n    margin: 0;\\n    padding: 0;\\n    display: inline-block; }\\n\\n.al-share-auth .al-share li {\\n      margin-left: 24px; }\\n\\n.al-share-auth .al-share li:first-child {\\n        margin-left: 0; }\\n\\n.al-share-auth .al-share li i {\\n        font-size: 24px; }\\n\\n.btn-auth {\\n  color: #ffffff !important; }\\n\\n.auth-block[_ngcontent-c2] .control-label[_ngcontent-c2] {\\n  padding-top: 11px;\\n  color: black; }\\n\\n.auth-block[_ngcontent-c2] {\\n  width: 540px;\\n  margin: 0 auto;\\n  border-radius: 5px;\\n  color: black;\\n  padding: 32px;\\n  border: 3px solid black; }\\n\\n.inputlabelcommon {\\n  border: 1px solid black !important;\\n  border-radius: 0px !important;\\n  color: black !important; }\\n\\n.commonbutton {\\n  text-align: center;\\n  font-weight: 200;\\n  margin: 0 33%;\\n  margin-bottom: 10px; }\\n\\n.form-control {\\n  background-color: rgba(255, 255, 255, 0.1);\\n  box-shadow: none;\\n  font-size: 14px;\\n  border: 1px solid black !important;\\n  border-radius: 0px !important;\\n  color: black !important; }\\n\""],"sourceRoot":""}